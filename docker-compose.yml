services:
  app:
    build:
      context: .
      dockerfile: ./etc/go/Dockerfile
    volumes:
      - ./:/app
    ports:
      - "${API_PORT}:${API_PORT}"
    networks:
      - backend
  webserver:
    image: nginx:stable-alpine
    depends_on:
      - app
    environment:
      - API_PORT=${API_PORT}
    volumes:
      - ./etc/nginx/app.template.conf:/etc/nginx/app.template.conf
      - ./static:/app/static
    ports:
      - 80:80
    entrypoint: >
      /bin/sh -c "envsubst '$$API_PORT' < /etc/nginx/app.template.conf > /etc/nginx/app.conf && 
      cp /etc/nginx/app.conf /etc/nginx/conf.d/default.conf && 
      nginx -g 'daemon off;'"
    networks:
      - backend
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: test_db
      POSTGRES_PASSWORD: test_pass
      POSTGRES_USER: test_user
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      - ./etc/postgres/create_dev_db.sh:/docker-entrypoint-initdb.d/create_dev_db.sh
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - "5432:5432"
    networks:
      - backend
networks:
  backend:
volumes:
  db-data: